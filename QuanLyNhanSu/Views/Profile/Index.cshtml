@model QuanLyNhanSu.Models.NhanVien
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var UserNow = (string)Session["MaNhanVien"];
    string background;
    string userAvatar;
    var db = new QuanLyNhanSu.Models.QuanLyNhanSuEntities();

    string likecolor;

    string gioitinh;
    switch (Model.GioiTinh)
    {
        case 0:
            gioitinh = "Nữ";
            break;
        case 1:
            gioitinh = "Nam";
            break;
        default:
            gioitinh = "Khác";
            break;
    }
    }
    
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.9.2/umd/popper.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/js/bootstrap.min.js"></script>

<div class="container">
    <!-- Background Image -->
    @if (!string.IsNullOrEmpty(Model.CoverImage))
    {
        background = "/Content/images/profile/" + Model.CoverImage;
    }
    else
    {
        background = "/Content/images/slide4.jpg";
    }
    <div class="cover-photo" style="background-image: url('@background')">
        @if (UserNow == Model.MaNhanVien)
        {
            <div class="cover-photo-actions" style="position: absolute; top: 10px; right: 10px;">
                <label for="backgroundInput" class="btn btn-dark btn-sm">
                    <i class="fas fa-camera"></i> Change Cover
                </label>
                <input type="file" id="backgroundInput" style="display: none;" accept="image/*" />
            </div>
        }
    </div>

    <!-- Profile Info -->
        <div class="profile-info">
    <div class="profile-picture">
        @if (!string.IsNullOrEmpty(Model.HinhAnh))
        {
            userAvatar = "/Content/images/" + Model.HinhAnh;
        }
        else
        {
            userAvatar = "/Content/images/icon.jpg";
        }
        <img src="@userAvatar" alt="@Model.HoTen" />
    </div>
    <div class="profile-name-section">
        <h1 class="profile-name" style="position:static; margin-top:100px;">@Model.HoTen</h1>
        @if (UserNow != Model.MaNhanVien)
        {
            <a href="@Url.Action("StartConversation", "Message", new { participantId = Model.MaNhanVien })"
               class="btn btn-primary" style="margin-top:100px;">
                <i class="fas fa-comment-dots"></i> Message
            </a>
        }
    </div>
</div>
    <div class="content-layout">

        <!-- Left Sidebar - Photos -->
        <div class="left-sidebar">
            <div class="card bg-dark border-secondary">
                <div class="card-header">
                    <h5>Photos</h5>
                </div>
                <div class="photo-grid">
                    @foreach (var photo in Model.Photos.Take(6))
                    {
                        <div class="photo-item">
                            <img src="@photo.ImageURL" alt="User photo" />
                        </div>
                    }
                </div>
                @if (UserNow == Model.MaNhanVien)
                {
                    using (Html.BeginForm("UploadPhoto", "Profile", FormMethod.Post, new { enctype = "multipart/form-data", id = "photoUploadForm" }))
                    {
                        <input type="file" name="photoFile" id="photoFileInput" class="form-control-file mt-3" style="display:none" accept="image/*" />
                        <button type="button" id="uploadPhotoBtn" class="btn btn-primary mt-2" style="position:relative;display:flex;justify-content:center; margin-top:20px; width:330px;">
                            <i class="fas fa-camera me-2"></i>  Upload Photo
                        </button>
                    }
                }
                <div style="padding-top:20px;">
                    <hr />
                    <h4 style="display:flex; justify-content:center"><strong>Intro</strong></h4>
                    <p> @db.NhanViens.SingleOrDefault(m => m.MaNhanVien == Model.MaNhanVien).Bio</p>
                    <hr />
                    <h4 style="display:flex; justify-content:center"><strong>Infomation</strong></h4>
                    @{try
                        {
                            <p> Gender: @gioitinh</p>
                            <p> Chuyen nganh: @db.ChuyenNganhs.SingleOrDefault(m => m.MaChuyenNganh == Model.MaChuyenNganh).TenChuyenNganh</p>
                            <p> Phong ban: @db.PhongBans.SingleOrDefault(m => m.MaPhongBan == Model.MaPhongBan).TenPhongBan</p>
                            <p> Chuc vu: @db.ChucVuNhanViens.SingleOrDefault(m => m.MaChucVuNV == Model.MaChucVuNV).TenChucVu</p>
                            <p> Trinh do hoc van: @db.TrinhDoHocVans.SingleOrDefault(m => m.MaTrinhDoHocVan == Model.MaTrinhDoHocVan).TenTrinhDo</p>}
                        catch { }
                    }
                </div>

            </div>
        </div>

        <!-- Main Content - Posts -->
        <div class="main-content">
            <!-- Create Post -->
            <div class="create-post">
                @if (UserNow == Model.MaNhanVien)
                {
                    using (Html.BeginForm("CreatePost", "Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        <textarea name="Content" class="post-input" placeholder="What's on your mind?"></textarea>
                        <input type="text" name="UserID" value="@Model.MaNhanVien" hidden />
                        <div class="mt-2" style="display:flex;justify-content:flex-end">
                            <label for="file-post" class="btn-upload" id="btn_upload" style="margin-top:15px;margin-right:20px;">
                                <svg viewBox="0 0 640 512" width="32">
                                    <path d="M537.6 226.6c4.1-10.7 6.4-22.4 6.4-34.6 0-53-43-96-96-96-19.7 0-38.1 6-53.3 16.2C367 64.2 315.3 32 256 32c-88.4 0-160 71.6-160 160 0 2.7.1 5.4.2 8.1C40.2 219.8 0 273.2 0 336c0 79.5 64.5 144 144 144h368c70.7 0 128-57.3 128-128 0-61.9-44-113.6-102.4-125.4zM393.4 288H328v112c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V288h-65.4c-14.3 0-21.4-17.2-11.3-27.3l105.4-105.4c6.2-6.2 16.4-6.2 22.6 0l105.4 105.4c10.1 10.1 2.9 27.3-11.3 27.3z"></path>
                                </svg>
                                <span></span>

                            </label>
                            <input type="file" name="imageFile" class="form-control-file" id="file-post" style="display:none" />
                            <button type="submit" class="btn btn-primary mt-2" style="margin-top:10px;align-self:end;display:block;margin-right:20px;">Post</button>
                        </div>
                    }
                }
            </div>

            <!-- Posts List -->
            @foreach (var post in Model.Posts.OrderByDescending(p => p.PostDate))
            {
                <div class="card bg-dark border-secondary mb-3">
                    <div class="card-body">
                        <div class="post">
                            <div class="post-header">
                                <img src="/Content/images/@post.NhanVien.HinhAnh" class="post-avatar" />
                                <div>
                                    <h6 style="margin:0;font-size:15px;"><strong>@post.NhanVien.HoTen</strong></h6>
                                    <small style="margin-top:0px;">@post.PostDate.ToString()</small>
                                </div>
                            </div>
                            <div class="post-content">
                                <p class="mt-3" style="padding-top:5px;">@post.Content</p>
                                @if (!string.IsNullOrEmpty(post.ImageURL))
                                {
                                    
                                    var fileExtension = Path.GetExtension(post.ImageURL).ToLower();
                                    if (fileExtension == ".mp4" || fileExtension == ".avi" || fileExtension == ".mov")
                                    {
                                        <div style="display: flex; justify-content: center; margin-bottom: 20px;">
                                            <video controls controlsList="nodownload noplaybackrate" autoplay muted class="img-fluid post-image" style="max-width: 100%; height: auto;">
                                                <source src="@post.ImageURL" type="video/mp4">
                                                Your browser does not support the video tag.
                                            </video>
                                        </div>
                                    }
                                    else if (fileExtension == ".jpg" || fileExtension == ".jpeg" || fileExtension == ".png" || fileExtension == ".gif")
                                    {
                                        <div style="display: flex; justify-content: center; margin-bottom: 20px;">
                                            <img src="@post.ImageURL" class="img-fluid post-image" style="max-width: 100%; height: auto;" />
                                        </div>
                                    }
                                }
                            </div>
                            <!-- Like and Comment Section -->
                            @{var existingLike = db.Likes.FirstOrDefault(l => l.PostID == post.PostID && l.UserID == UserNow);
                                if (existingLike == null)
                                {
                                    likecolor = "#fff";
                                }
                                else
                                {
                                    likecolor = "#007bff";
                                }
                            }
                            <div class="post-actions mt3">
                                <button class="btn btn-link text-light like-button" data-post-id="@post.PostID" style="color:@likecolor">
                                    <i class="fas fa-thumbs-up"></i> Like (@post.Likes.Count)
                                </button>
                                <button class="btn btn-link text-light comment-toggle">
                                    <i class="fas fa-comment"></i> Comment (@post.Comments.Count)
                                </button>
                            </div>

                            <!-- Comments Section -->
                            <div class="comments-section mt-3">
                                @foreach (var comment in post.Comments.OrderByDescending(c => c.CommentDate))
                                {
                                    <div class="comment">
                                        <img src="/Content/images/@comment.NhanVien.HinhAnh" class="comment-avatar" />
                                        <div class="comment-content">
                                            <h6 style="margin-top:5px;"><strong>@comment.NhanVien.HoTen</strong></h6>
                                            <p>@comment.Content</p>

                                        </div>


                                    </div>
                                    <small style="display:flex; position:relative; left:50px; padding-bottom:10px;">@comment.CommentDate.ToString()</small>
                                }

                                <div class="add-comment mt-2">

                                    <input type="text" class="form-control bg-dark text-light comment-input"
                                           placeholder="Write a comment..." data-post-id="@post.PostID" style="max-width:1000px ; width:85vh; margin-top:20px; height:45px;" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

</div>
<style>
    .cover-photo {
        position: relative;
        height: 300px;
        background-size: cover;
        background-position: center;
        border-radius: 8px 8px 0 0;
    }

    .cover-photo-actions {
        position: absolute;
        top: 10px;
        right: 10px;
        z-index: 100;
    }

        .cover-photo-actions label {
            background-color: rgba(0, 0, 0, 0.6);
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .cover-photo-actions label:hover {
                background-color: rgba(0, 0, 0, 0.8);
            }

    .profile-info {
        display: flex;
        align-items: flex-end; /* Changed to align-items: flex-end */
        padding: 20px;
        position: relative;
        margin-top: -90px; /* Added margin-top to adjust overall position */
    }

    .profile-picture {
        width: 168px;
        height: 168px;
        border-radius: 50%;
        border: 6px solid var(--bg-primary);
        overflow: hidden;
        margin-right: 20px;
    }

        .profile-picture img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    .profile-name-section {
        display: flex;
        align-items: center;
        gap: 20px;
        padding-bottom: 20px; /* Added padding to align with profile picture */
    }

    .profile-name {
        margin-top: 100px;
        font-size: 32px;
        font-weight: bold;
        position:static;
        
    }

    .cover-photo {
        position: relative;
        height: 300px;
        background-size: cover;
        background-position: center;
        border-radius: 8px 8px 0 0;
    }

    .cover-photo-actions {
        position: absolute;
        top: 10px;
        right: 10px;
        z-index: 100;
    }

        .cover-photo-actions label {
            background-color: rgba(0, 0, 0, 0.6);
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .cover-photo-actions label:hover {
                background-color: rgba(0, 0, 0, 0.8);
            }

    .profile-info {
        display: flex;
        align-items: center;
        padding: 20px;
        position: relative;
    }

    .profile-picture {
        margin-right: 20px;
    }

        .profile-picture img {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            border: 4px solid #fff;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

    .profile-name {
        margin: 0;
        font-size: 24px;
    }

    :root {
        --bg-primary: #18191A;
        --bg-secondary: #242526;
        --text-primary: #E4E6EB;
        --text-secondary: #B0B3B8;
        --accent: #2D88FF;
        --hover: #3A3B3C;
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    }

    body {
        background-color: var(--bg-primary);
        color: var(--text-primary);
    }

    .container {
        max-width: 1280px;
        margin: 0 auto;
        padding: 20px;
    }

    /* Cover Photo Section */
    .cover-photo {
        height: 400px;
        border-radius: 8px;
        overflow: hidden;
        position: relative;
        background: var(--bg-secondary);
        background-size: cover;
    }

        .cover-photo img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    /* Profile Section */
    .profile-info {
        margin-top: -90px;
        padding: 0 20px;
        position: relative;
        z-index: 1;
    }

    .profile-picture {
        width: 168px;
        height: 168px;
        border-radius: 50%;
        border: 6px solid var(--bg-primary);
        overflow: hidden;
    }

        .profile-picture img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    .profile-name {
        margin-top: 20px;
        font-size: 32px;
        font-weight: bold;
        display: flex;
        position: absolute;
        top: 100px;
        left: 200px;
    }

    /* Content Layout */
    .content-layout {
        display: grid;
        grid-template-columns: 360px 1fr;
        gap: 20px;
        margin-top: 20px;
    }

    /* Left Sidebar */
    .left-sidebar {
        background: var(--bg-secondary);
        border-radius: 8px;
        padding: 16px;
        min-height:fit-content;
        overflow:hidden;
        height:fit-content;
        max-height:fit-content;
        min-width:fit-content;
        
    }


    .photo-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 4px;
    }

        .photo-grid img {
            width: 100%;
            aspect-ratio: 1;
            object-fit: cover;
            border-radius: 4px;
        }

    /* Main Content */
    .create-post {
        background: var(--bg-secondary);
        border-radius: 8px;
        padding: 12px;
        margin-bottom: 20px;
    }

    .post-input {
        background: var(--hover);
        border: none;
        border-radius: 20px;
        padding: 12px 16px;
        color: var(--text-primary);
        width: 85vh;
        margin-top: 10px;
        max-width: 1000px;
        resize:none;
    }

    /* Post Styles */
    .post {
        background: var(--bg-secondary);
        border-radius: 8px;
        padding: 12px;
        margin-bottom: 16px;
    }

    .post-header {
        display: flex;
        align-items: center;
        margin-bottom: 12px;
    }
    

    .post-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        margin-right: 12px;
    }
    .post-content{
        text-align:left;
        width:fit-content;

    }
    .post-content img {
        width: 80%;
        border-radius: 8px;
        margin: 12px 0;
        display:inline-block;
        text-align:center;
    }

    .post-actions {
        display: flex;
        justify-content: space-between;
        padding: 8px 0;
        border-top: 1px solid var(--hover);
        margin-top: 12px;
    }

    .action-button {
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 6px 12px;
        border-radius: 4px;
        color: var(--text-secondary);
        cursor: pointer;
    }

        .action-button:hover {
            background: var(--hover);
        }

    /* Comments */
    .comments-section {
        margin-top: 12px;
        border-top: 1px solid var(--hover);
        padding-top: 12px;
    }

    .comment {
        display: flex;
        gap: 8px;
        margin-bottom: 8px;
    }

    .comment-avatar {
        width: 32px;
        height: 32px;
        border-radius: 50%;
    }

    .comment-content {
        background: var(--hover);
        padding: 8px 12px;
        border-radius: 16px;
        flex: 1;
    }
    .btn-upload {
        color: var(--btn-upload-color);
        fill: var(--btn-upload-color);
        font-family: inherit;
        font-size: inherit;
        font-weight: bold;
        background-color: var(--btn-upload-background-color);
        width: var(--btn-upload-width);
        height: var(--btn-upload-height);
        padding: 0;
        border: 0;
        margin-right: 6px;
        outline: 0;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        position: relative;
        border-radius: 50px;
        box-shadow: 0 0.7em 1.2em rgba(25, 25, 25, 0.5);
    }

        .btn-upload:not(.btn-upload-uploading) {
            transition: box-shadow var(--btn-upload-transition-time) ease-out, transform var(--btn-upload-transition-time) ease-out;
        }

            .btn-upload:not(.btn-upload-uploading):hover {
                box-shadow: 0 0.7em 1.2em rgba(25, 25, 25, 0.8);
            }

            .btn-upload:not(.btn-upload-uploading):active {
                box-shadow: 0 0 0 rgba(25, 25, 25, 0.8);
                transform: translateY(0.2em);
            }

        .btn-upload > svg {
            fill: inherit;
        }

        .btn-upload > span {
            color: inherit;
            margin-left: 0.3em;
        }
    #uploadPhotoBtn {
        transition: background-color 0.3s ease;
    }

        #uploadPhotoBtn:hover {
            background-color: #0056b3;
        }

        #uploadPhotoBtn:disabled {
            cursor: not-allowed;
            opacity: 0.7;
        }

    .spinner-border {
        margin-left: 8px;
    }
</style>

<script>
    try {
        let currentUserName = '@db.NhanViens.SingleOrDefault(m=>m.MaNhanVien == UserNow).HoTen';
        let currentUserProfileImage = '@Url.Content("/Content/images/" + db.NhanViens.SingleOrDefault(m=>m.MaNhanVien == UserNow).HinhAnh)';
    }
    catch { }
    $(document).ready(function () {
        // Like functionality
        $(document).on('click', '.like-button', function () {
            var postId = $(this).data('post-id');
            var button = $(this);

            $.ajax({
                url: '/Profile/ToggleLike',
                type: 'POST',
                data: { postId: postId },
                success: function (response) {
                    if (response.success) {
                        var likeCount = response.likeCount;
                        // Update like count and icon
                        if (!response.isLiked) {
                            button.html(`<i class="fas fa-thumbs-up"></i> Like (${likeCount})`);
                            button.css('color', '#007bff'); // Bootstrap primary blue color
                        } else {
                            button.html(`<i class="fas fa-thumbs-up"></i> Like (${likeCount})`);
                            button.css('color', '#fff'); // White color
                        }
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error toggling like:', error);
                }
            });
        });

        // Initialize existing like buttons color based on their state
        /*$('.like-button').each(function () {
            var isLiked = $(this).data('is-liked');
            if (isLiked === true) {
                $(this).css('color', '#007bff');
            } else {
                $(this).css('color', '#fff');
            }
        });*/

        // Comment functionality
        $(document).on('keypress', '.comment-input', function (e) {
            if (e.which == 13) { // Enter key
                var input = $(this);
                var postId = input.data('post-id');
                var content = input.val().trim();
                var commentsSection = input.closest('.comments-section');

                if (content !== '') {
                    $.ajax({
                        url: '/Profile/AddComment',
                        type: 'POST',
                        data: {
                            postId: postId,
                            content: content
                        },
                        success: function (response) {
                            if (response.success) {
                                // Add new comment to the DOM
                                var commentHtml = `
                                <div class="comment">
                                    <img src="/Content/images/${response.userAvatar}" class="comment-avatar" />
                                    <div class="comment-content">
                                        <h6 style="margin-top:5px;"><strong>${response.userName}</strong></h6>
                                        <p>${response.content}</p>
                                    </div>
                                </div>
                                <small style="display:flex; position:relative; left:50px; padding-bottom:10px;">Just now</small>
                            `;

                                // Insert the new comment at the top
                                $(commentHtml).insertBefore(commentsSection.find('.add-comment'));
                                /*commentsSection.find('.comment:first').before(commentHtml);*/

                                // Clear input
                                input.val('');

                                // Update comment count
                                var commentButton = input.closest('.card').find('.comment-toggle');
                                var currentCount = parseInt(commentButton.text().match(/\d+/)[0]);
                                commentButton.html(`<i class="fas fa-comment"></i> Comment (${currentCount + 1})`);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error adding comment:', error);
                        }
                    });
                }
            }
        });
        function escapeHtml(text) {
            return text.replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }

        // Create Post functionality
        $('form').on('submit', function (e) {
            if ($(this).find('textarea[name="Content"]').length > 0) {
                e.preventDefault();

                var form = $(this);
                var formData = new FormData(this);

                $.ajax({
                    url: '/Profile/CreatePost',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            // Create new post HTML
                            var postHtml = `
                            <div class="card bg-dark border-secondary mb-3">
                                <div class="card-body">
                                    <div class="post">
                                        <div class="post-header">
                                            <img src="/Content/images/${response.userAvatar}" class="post-avatar" />
                                            <div>
                                                <h6 style="margin:0;font-size:15px;"><strong>${response.userName}</strong></h6>
                                                <small style="margin-top:0px;">Just now</small>
                                            </div>
                                        </div>
                                        <div class="post-content">
                                            <p class="mt-3" style="padding-top:5px;">${response.content ? escapeHtml(response.content): ''}</p>
                                            ${response.imageUrl ? `<img src="${response.imageUrl}" class="img-fluid post-image" />` : ''}
                                        </div>
                                        <div class="post-actions mt3">
                                            <button class="btn btn-link text-light like-button" data-post-id="${response.postId}"style="color:#fff">
                                                <i class="fas fa-thumbs-up"></i> Like (0)
                                            </button>
                                            <button class="btn btn-link text-light comment-toggle">
                                                <i class="fas fa-comment"></i> Comment (0)
                                            </button>
                                        </div>
                                        <div class="comments-section mt-3">
                                            <div class="add-comment mt-2">
                                                <input type="text" class="form-control bg-dark text-light comment-input"
                                                    placeholder="Write a comment..." data-post-id="${response.postId}"
                                                    style="max-width:1000px; width:85vh; margin-top:20px; height:45px;" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        `;

                            // Add new post at the top of the posts list
                            /*$('.main-content .card:first').before(postHtml);*/

                            if ($('.main-content .card').length > 0) {
                                $('.main-content .card:first').before(postHtml);
                            } else {
                                $('.main-content').append(postHtml);
                            }

                            // Clear form
                            form.find('textarea[name="Content"]').val('');
                            form.find('input[type="file"]').val('');
                            $('.preview-container').empty();
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error creating post:', error);
                    }
                });
            }
        });

        // Toggle comments section
        $(document).on('click', '.comment-toggle', function () {
            $(this).closest('.card-body').find('.comments-section').slideToggle();
        });

        // Image preview
        $('input[type="file"]').change(function () {
            var file = this.files[0];
            if (file) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    if (!$('.preview-container').length) {
                        $('.create-post').append('<div class="preview-container mt-2"></div>');
                    }
                    $('.preview-container').html(`
                    <img src="${e.target.result}" class="img-fluid" style="max-height: 200px; border-radius: 8px;">
                `);
                };
                reader.readAsDataURL(file);
            }
        });
        $('.photo-item').hover(
            function () { $(this).css('opacity', '0.8'); },
            function () { $(this).css('opacity', '1'); }
        );
        $(document).ready(function () {
    // Background image change functionality
    $('#backgroundInput').change(function(e) {
        var file = e.target.files[0];
        if (!file) return;

        // Validate file type
        if (!file.type.match('image.*')) {
            alert('Please select an image file');
            return;
        }

        // Validate file size (max 5MB)
        if (file.size > 5 * 1024 * 1024) {
            alert('File size should not exceed 5MB');
            return;
        }

        var formData = new FormData();
        formData.append('backgroundImage', file);

        // Show loading indicator
        var loadingOverlay = $('<div class="loading-overlay">' +
            '<div class="spinner-border text-light" role="status">' +
            '<span class="visually-hidden">Loading...</span>' +
            '</div></div>');

        $('.cover-photo').append(loadingOverlay);

        $.ajax({
            url: '/Profile/UpdateBackground',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function(response) {
                if (response.success) {
                    // Update background image
                    $('.cover-photo').css('background-image', `url('${response.imageUrl}')`);

                    // Show success message
                    showNotification('Background updated successfully', 'success');
                } else {
                    showNotification('Failed to update background', 'error');
                }
            },
            error: function() {
                showNotification('Error updating background', 'error');
            },
            complete: function() {
                // Remove loading overlay
                $('.loading-overlay').remove();
            }
        });
    });

    // Notification helper function
    function showNotification(message, type) {
        var alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
        var notification = $(`<div class="alert ${alertClass} notification-popup" role="alert">
            ${message}
        </div>`);

        $('body').append(notification);

        setTimeout(function() {
            notification.fadeOut(function() {
                $(this).remove();
            });
        }, 3000);
    }

    // Add this to your existing CSS
    $('<style>')
        .text(`
            .loading-overlay {
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: rgba(0,0,0,0.5);
                display: flex;
                justify-content: center;
                align-items: center;
                border-radius: 8px 8px 0 0;
            }

            .notification-popup {
                position: fixed;
                top: 20px;
                right: 20px;
                z-index: 1050;
                min-width: 250px;
                box-shadow: 0 4px 6px rgba(0,0,0,0.1);
                animation: slideIn 0.5s ease-out;
            }

            @@keyframes slideIn {
                from {
                    transform: translateX(100%);
                    opacity: 0;
                }
                to {
                    transform: translateX(0);
                    opacity: 1;
                }
            }
        `)
        .appendTo('head');
        });

        $(document).ready(function () {
            // Handle Upload Photo button click
            $('#uploadPhotoBtn').click(function () {
                $('#photoFileInput').click();
            });

            // Handle file selection
            $('#photoFileInput').change(function () {
                if (this.files && this.files[0]) {
                    // Show loading spinner
                    const loadingSpinner = $('<div class="spinner-border spinner-border-sm text-light ms-2"></div>');
                    $('#uploadPhotoBtn').append(loadingSpinner);
                    $('#uploadPhotoBtn').prop('disabled', true);

                    // Submit the form automatically when a file is selected
                    $('#photoUploadForm').submit();
                }
            });

            // Handle form submission
            $('#photoUploadForm').on('submit', function (e) {
                e.preventDefault();

                const formData = new FormData(this);

                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        // Refresh the page to show the new photo
                        location.reload();
                    },
                    error: function () {
                        alert('Error uploading photo. Please try again.');
                        // Remove loading spinner and re-enable button
                        $('#uploadPhotoBtn .spinner-border').remove();
                        $('#uploadPhotoBtn').prop('disabled', false);
                    }
                });
            });
        });
    });
</script>
